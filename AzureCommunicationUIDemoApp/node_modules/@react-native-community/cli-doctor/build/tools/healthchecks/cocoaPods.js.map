{"version":3,"names":["label","description","getDiagnostics","Managers","needsToBeFixed","doesSoftwareNeedToBeFixed","version","CocoaPods","versionRange","versionRanges","COCOAPODS","runAutomaticFix","loader","stop","installMethod","promptQuestion","promptCocoaPodsInstallationQuestion","installMethodCapitalized","substr","toUpperCase","loaderInstallationMessage","loaderSucceedMessage","removeMessage","start","options","execa","succeed","_error","runSudo","join","error","logError","healthcheck","command","brewInstall","pkg","onSuccess"],"sources":["../../../src/tools/healthchecks/cocoaPods.ts"],"sourcesContent":["import execa from 'execa';\nimport {doesSoftwareNeedToBeFixed} from '../checkInstallation';\nimport {promptCocoaPodsInstallationQuestion, runSudo} from '../installPods';\nimport {removeMessage, logError} from './common';\nimport {brewInstall} from '../brewInstall';\nimport {HealthCheckInterface} from '../../types';\nimport versionRanges from '../versionRanges';\n\nconst label = 'CocoaPods';\n\nexport default {\n  label,\n  description: 'Required for installing iOS dependencies',\n  getDiagnostics: async ({Managers}) => ({\n    needsToBeFixed: doesSoftwareNeedToBeFixed({\n      version: Managers.CocoaPods.version,\n      versionRange: versionRanges.COCOAPODS,\n    }),\n    version: Managers.CocoaPods.version,\n    versionRange: versionRanges.COCOAPODS,\n  }),\n  runAutomaticFix: async ({loader}) => {\n    loader.stop();\n\n    const {\n      installMethod,\n      promptQuestion,\n    } = await promptCocoaPodsInstallationQuestion();\n\n    // Capitalise `Homebrew` when printing on the screen\n    const installMethodCapitalized =\n      installMethod === 'homebrew'\n        ? installMethod.substr(0, 1).toUpperCase() + installMethod.substr(1)\n        : installMethod;\n    const loaderInstallationMessage = `${label} (installing with ${installMethodCapitalized})`;\n    const loaderSucceedMessage = `${label} (installed with ${installMethodCapitalized})`;\n\n    // Remove the prompt after the question of how to install CocoaPods is answered\n    removeMessage(promptQuestion);\n\n    if (installMethod === 'gem') {\n      loader.start(loaderInstallationMessage);\n\n      const options = ['install', 'cocoapods', '--no-document'];\n\n      try {\n        // First attempt to install `cocoapods`\n        await execa('gem', options);\n\n        return loader.succeed(loaderSucceedMessage);\n      } catch (_error) {\n        // If that doesn't work then try with sudo\n        try {\n          await runSudo(`gem ${options.join(' ')}`);\n\n          return loader.succeed(loaderSucceedMessage);\n        } catch (error) {\n          logError({\n            healthcheck: label,\n            loader,\n            error,\n            command: 'sudo gem install cocoapods',\n          });\n        }\n      }\n    }\n\n    if (installMethod === 'homebrew') {\n      return await brewInstall({\n        pkg: 'cocoapods',\n        label: loaderInstallationMessage,\n        loader,\n        onSuccess: () => loader.succeed(loaderSucceedMessage),\n      });\n    }\n  },\n} as HealthCheckInterface;\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAA6C;AAE7C,MAAMA,KAAK,GAAG,WAAW;AAAC,eAEX;EACbA,KAAK;EACLC,WAAW,EAAE,0CAA0C;EACvDC,cAAc,EAAE,OAAO;IAACC;EAAQ,CAAC,MAAM;IACrCC,cAAc,EAAE,IAAAC,4CAAyB,EAAC;MACxCC,OAAO,EAAEH,QAAQ,CAACI,SAAS,CAACD,OAAO;MACnCE,YAAY,EAAEC,sBAAa,CAACC;IAC9B,CAAC,CAAC;IACFJ,OAAO,EAAEH,QAAQ,CAACI,SAAS,CAACD,OAAO;IACnCE,YAAY,EAAEC,sBAAa,CAACC;EAC9B,CAAC,CAAC;EACFC,eAAe,EAAE,OAAO;IAACC;EAAM,CAAC,KAAK;IACnCA,MAAM,CAACC,IAAI,EAAE;IAEb,MAAM;MACJC,aAAa;MACbC;IACF,CAAC,GAAG,MAAM,IAAAC,gDAAmC,GAAE;;IAE/C;IACA,MAAMC,wBAAwB,GAC5BH,aAAa,KAAK,UAAU,GACxBA,aAAa,CAACI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGL,aAAa,CAACI,MAAM,CAAC,CAAC,CAAC,GAClEJ,aAAa;IACnB,MAAMM,yBAAyB,GAAI,GAAEpB,KAAM,qBAAoBiB,wBAAyB,GAAE;IAC1F,MAAMI,oBAAoB,GAAI,GAAErB,KAAM,oBAAmBiB,wBAAyB,GAAE;;IAEpF;IACA,IAAAK,qBAAa,EAACP,cAAc,CAAC;IAE7B,IAAID,aAAa,KAAK,KAAK,EAAE;MAC3BF,MAAM,CAACW,KAAK,CAACH,yBAAyB,CAAC;MAEvC,MAAMI,OAAO,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,eAAe,CAAC;MAEzD,IAAI;QACF;QACA,MAAM,IAAAC,gBAAK,EAAC,KAAK,EAAED,OAAO,CAAC;QAE3B,OAAOZ,MAAM,CAACc,OAAO,CAACL,oBAAoB,CAAC;MAC7C,CAAC,CAAC,OAAOM,MAAM,EAAE;QACf;QACA,IAAI;UACF,MAAM,IAAAC,oBAAO,EAAE,OAAMJ,OAAO,CAACK,IAAI,CAAC,GAAG,CAAE,EAAC,CAAC;UAEzC,OAAOjB,MAAM,CAACc,OAAO,CAACL,oBAAoB,CAAC;QAC7C,CAAC,CAAC,OAAOS,KAAK,EAAE;UACd,IAAAC,gBAAQ,EAAC;YACPC,WAAW,EAAEhC,KAAK;YAClBY,MAAM;YACNkB,KAAK;YACLG,OAAO,EAAE;UACX,CAAC,CAAC;QACJ;MACF;IACF;IAEA,IAAInB,aAAa,KAAK,UAAU,EAAE;MAChC,OAAO,MAAM,IAAAoB,wBAAW,EAAC;QACvBC,GAAG,EAAE,WAAW;QAChBnC,KAAK,EAAEoB,yBAAyB;QAChCR,MAAM;QACNwB,SAAS,EAAE,MAAMxB,MAAM,CAACc,OAAO,CAACL,oBAAoB;MACtD,CAAC,CAAC;IACJ;EACF;AACF,CAAC;AAAA"}