{"version":3,"names":["xcodeEnvFile","pathSeparator","removeLastPathComponent","pathString","components","split","splice","length","join","pathHasXcodeEnvFile","xcodeEnvPath","fs","existsSync","pathDoesNotHaveXcodeEnvFile","label","description","getDiagnostics","projectRoot","findProjectRoot","allPathsHasXcodeEnvFile","findPodfilePaths","map","basePath","reduce","previousValue","currentValue","needsToBeFixed","runAutomaticFix","loader","stop","templateXcodeEnv","templateIosPath","resolveNodeModuleDir","src","copyFileAsync","promisify","copyFile","filter","forEach","destFilePath","succeed","e","fail"],"sources":["../../../src/tools/healthchecks/xcodeEnv.ts"],"sourcesContent":["import {HealthCheckInterface} from '../../types';\nimport fs from 'fs';\nimport {promisify} from 'util';\nimport {\n  findProjectRoot,\n  resolveNodeModuleDir,\n} from '@react-native-community/cli-tools';\nimport {findPodfilePaths} from '@react-native-community/cli-platform-ios';\n\nconst xcodeEnvFile = '.xcode.env';\nconst pathSeparator = '/';\n\nfunction removeLastPathComponent(pathString: string): string {\n  const components = pathString.split(pathSeparator);\n  components.splice(components.length - 1, 1);\n  return components.join(pathSeparator);\n}\n\nfunction pathHasXcodeEnvFile(pathString: string): boolean {\n  const xcodeEnvPath = pathString + pathSeparator + xcodeEnvFile;\n  return fs.existsSync(xcodeEnvPath);\n}\n\nfunction pathDoesNotHaveXcodeEnvFile(pathString: string): boolean {\n  return !pathHasXcodeEnvFile(pathString);\n}\n\nexport default {\n  label: '.xcode.env',\n  description: 'File to customize Xcode environment',\n  getDiagnostics: async () => {\n    const projectRoot = findProjectRoot();\n    const allPathsHasXcodeEnvFile = findPodfilePaths(projectRoot)\n      .map((pathString: string) => {\n        const basePath = removeLastPathComponent(pathString);\n        return pathHasXcodeEnvFile(basePath);\n      })\n      .reduce(\n        (previousValue: boolean, currentValue: boolean) =>\n          previousValue && currentValue,\n      );\n    return {\n      needsToBeFixed: !allPathsHasXcodeEnvFile,\n    };\n  },\n  runAutomaticFix: async ({loader}) => {\n    try {\n      loader.stop();\n      const templateXcodeEnv = '_xcode.env';\n      const projectRoot = findProjectRoot();\n      const templateIosPath = resolveNodeModuleDir(\n        projectRoot,\n        'react-native/template/ios',\n      );\n      const src = templateIosPath + pathSeparator + templateXcodeEnv;\n      const copyFileAsync = promisify(fs.copyFile);\n\n      findPodfilePaths(projectRoot)\n        .map(removeLastPathComponent)\n        // avoid overriding existing .xcode.env\n        .filter(pathDoesNotHaveXcodeEnvFile)\n        .forEach(async (pathString: string) => {\n          const destFilePath = pathString + pathSeparator + xcodeEnvFile;\n          await copyFileAsync(src, destFilePath);\n        });\n      loader.succeed('.xcode.env file have been created!');\n    } catch (e) {\n      loader.fail(e);\n    }\n  },\n} as HealthCheckInterface;\n"],"mappings":";;;;;;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAIA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA0E;AAE1E,MAAMA,YAAY,GAAG,YAAY;AACjC,MAAMC,aAAa,GAAG,GAAG;AAEzB,SAASC,uBAAuB,CAACC,UAAkB,EAAU;EAC3D,MAAMC,UAAU,GAAGD,UAAU,CAACE,KAAK,CAACJ,aAAa,CAAC;EAClDG,UAAU,CAACE,MAAM,CAACF,UAAU,CAACG,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;EAC3C,OAAOH,UAAU,CAACI,IAAI,CAACP,aAAa,CAAC;AACvC;AAEA,SAASQ,mBAAmB,CAACN,UAAkB,EAAW;EACxD,MAAMO,YAAY,GAAGP,UAAU,GAAGF,aAAa,GAAGD,YAAY;EAC9D,OAAOW,aAAE,CAACC,UAAU,CAACF,YAAY,CAAC;AACpC;AAEA,SAASG,2BAA2B,CAACV,UAAkB,EAAW;EAChE,OAAO,CAACM,mBAAmB,CAACN,UAAU,CAAC;AACzC;AAAC,eAEc;EACbW,KAAK,EAAE,YAAY;EACnBC,WAAW,EAAE,qCAAqC;EAClDC,cAAc,EAAE,YAAY;IAC1B,MAAMC,WAAW,GAAG,IAAAC,2BAAe,GAAE;IACrC,MAAMC,uBAAuB,GAAG,IAAAC,kCAAgB,EAACH,WAAW,CAAC,CAC1DI,GAAG,CAAElB,UAAkB,IAAK;MAC3B,MAAMmB,QAAQ,GAAGpB,uBAAuB,CAACC,UAAU,CAAC;MACpD,OAAOM,mBAAmB,CAACa,QAAQ,CAAC;IACtC,CAAC,CAAC,CACDC,MAAM,CACL,CAACC,aAAsB,EAAEC,YAAqB,KAC5CD,aAAa,IAAIC,YAAY,CAChC;IACH,OAAO;MACLC,cAAc,EAAE,CAACP;IACnB,CAAC;EACH,CAAC;EACDQ,eAAe,EAAE,OAAO;IAACC;EAAM,CAAC,KAAK;IACnC,IAAI;MACFA,MAAM,CAACC,IAAI,EAAE;MACb,MAAMC,gBAAgB,GAAG,YAAY;MACrC,MAAMb,WAAW,GAAG,IAAAC,2BAAe,GAAE;MACrC,MAAMa,eAAe,GAAG,IAAAC,gCAAoB,EAC1Cf,WAAW,EACX,2BAA2B,CAC5B;MACD,MAAMgB,GAAG,GAAGF,eAAe,GAAG9B,aAAa,GAAG6B,gBAAgB;MAC9D,MAAMI,aAAa,GAAG,IAAAC,iBAAS,EAACxB,aAAE,CAACyB,QAAQ,CAAC;MAE5C,IAAAhB,kCAAgB,EAACH,WAAW,CAAC,CAC1BI,GAAG,CAACnB,uBAAuB;MAC5B;MAAA,CACCmC,MAAM,CAACxB,2BAA2B,CAAC,CACnCyB,OAAO,CAAC,MAAOnC,UAAkB,IAAK;QACrC,MAAMoC,YAAY,GAAGpC,UAAU,GAAGF,aAAa,GAAGD,YAAY;QAC9D,MAAMkC,aAAa,CAACD,GAAG,EAAEM,YAAY,CAAC;MACxC,CAAC,CAAC;MACJX,MAAM,CAACY,OAAO,CAAC,oCAAoC,CAAC;IACtD,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVb,MAAM,CAACc,IAAI,CAACD,CAAC,CAAC;IAChB;EACF;AACF,CAAC;AAAA"}