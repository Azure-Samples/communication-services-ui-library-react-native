{"version":3,"names":["runPackager","args","config","packager","result","isPackagerRunning","port","logger","info","warn","startServerInNewWindow","terminal","reactNativePath","error","message","buildAndroid","_argv","androidProject","getAndroidProject","variant","tasks","mode","gradleArgs","getTaskNames","appName","extraParams","activeArchOnly","adbPath","getAdbPath","devices","adb","getDevices","architectures","map","device","getCPU","filter","arch","index","array","indexOf","length","join","push","build","sourceDir","process","chdir","cmd","platform","startsWith","debug","execa","sync","stdio","cwd","CLIError","options","name","description","default","env","RCT_METRO_PORT","parse","Number","getDefaultUserTerminal","val","split","func"],"sources":["../../../src/commands/buildAndroid/index.ts"],"sourcesContent":["import {\n  CLIError,\n  getDefaultUserTerminal,\n  isPackagerRunning,\n  logger,\n} from '@react-native-community/cli-tools';\nimport {Config} from '@react-native-community/cli-types';\nimport execa from 'execa';\nimport {getAndroidProject} from '../../config/getAndroidProject';\nimport adb from '../runAndroid/adb';\nimport getAdbPath from '../runAndroid/getAdbPath';\nimport {startServerInNewWindow} from './startServerInNewWindow';\nimport {getTaskNames} from '../runAndroid/getTaskNames';\n\nexport interface BuildFlags {\n  mode?: string;\n  variant?: string;\n  activeArchOnly?: boolean;\n  packager?: boolean;\n  port: number;\n  terminal: string;\n  tasks?: Array<string>;\n  extraParams?: Array<string>;\n}\n\nexport async function runPackager(args: BuildFlags, config: Config) {\n  if (!args.packager) {\n    return;\n  }\n  const result = await isPackagerRunning(args.port);\n  if (result === 'running') {\n    logger.info('JS server already running.');\n  } else if (result === 'unrecognized') {\n    logger.warn('JS server not recognized, continuing with build...');\n  } else {\n    // result == 'not_running'\n    logger.info('Starting JS server...');\n    try {\n      startServerInNewWindow(args.port, args.terminal, config.reactNativePath);\n    } catch (error) {\n      logger.warn(\n        `Failed to automatically start the packager server. Please run \"react-native start\" manually. Error details: ${error.message}`,\n      );\n    }\n  }\n}\n\nasync function buildAndroid(\n  _argv: Array<string>,\n  config: Config,\n  args: BuildFlags,\n) {\n  const androidProject = getAndroidProject(config);\n\n  if (args.variant) {\n    logger.warn(\n      '\"variant\" flag is deprecated and will be removed in future release. Please switch to \"mode\" flag.',\n    );\n  }\n\n  if (args.tasks && args.mode) {\n    logger.warn(\n      'Both \"tasks\" and \"mode\" parameters were passed to \"build\" command. Using \"tasks\" for building the app.',\n    );\n  }\n\n  let gradleArgs = getTaskNames(\n    androidProject.appName,\n    args.mode || args.variant,\n    args.tasks,\n    'assemble',\n  );\n\n  if (args.extraParams) {\n    gradleArgs = [...gradleArgs, ...args.extraParams];\n  }\n\n  if (args.activeArchOnly) {\n    const adbPath = getAdbPath();\n    const devices = adb.getDevices(adbPath);\n    const architectures = devices\n      .map((device) => {\n        return adb.getCPU(adbPath, device);\n      })\n      .filter(\n        (arch, index, array) => arch != null && array.indexOf(arch) === index,\n      );\n    if (architectures.length > 0) {\n      logger.info(`Detected architectures ${architectures.join(', ')}`);\n      // `reactNativeDebugArchitectures`Â was renamed to `reactNativeArchitectures` in 0.68.\n      // Can be removed when 0.67 no longer needs to be supported.\n      gradleArgs.push(\n        '-PreactNativeDebugArchitectures=' + architectures.join(','),\n      );\n      gradleArgs.push('-PreactNativeArchitectures=' + architectures.join(','));\n    }\n  }\n  await runPackager(args, config);\n  return build(gradleArgs, androidProject.sourceDir);\n}\n\nexport function build(gradleArgs: string[], sourceDir: string) {\n  process.chdir(sourceDir);\n  const cmd = process.platform.startsWith('win') ? 'gradlew.bat' : './gradlew';\n  logger.info('Building the app...');\n  logger.debug(`Running command \"${cmd} ${gradleArgs.join(' ')}\"`);\n  try {\n    execa.sync(cmd, gradleArgs, {\n      stdio: 'inherit',\n      cwd: sourceDir,\n    });\n  } catch (error) {\n    throw new CLIError('Failed to build the app.', error);\n  }\n}\n\nexport const options = [\n  {\n    name: '--mode <string>',\n    description: \"Specify your app's build variant\",\n  },\n  {\n    name: '--variant <string>',\n    description:\n      \"Specify your app's build variant. Deprecated! Use 'mode' instead\",\n  },\n  {\n    name: '--no-packager',\n    description: 'Do not launch packager while building',\n  },\n  {\n    name: '--port <number>',\n    default: process.env.RCT_METRO_PORT || 8081,\n    parse: Number,\n  },\n  {\n    name: '--terminal <string>',\n    description:\n      'Launches the Metro Bundler in a new window using the specified terminal path.',\n    default: getDefaultUserTerminal(),\n  },\n  {\n    name: '--tasks <list>',\n    description:\n      'Run custom Gradle tasks. By default it\\'s \"assembleDebug\". Will override passed mode and variant arguments.',\n    parse: (val: string) => val.split(','),\n  },\n  {\n    name: '--active-arch-only',\n    description:\n      'Build native libraries only for the current device architecture for debug builds.',\n    default: false,\n  },\n  {\n    name: '--extra-params <string>',\n    description: 'Custom properties passed to gradle build command',\n    parse: (val: string) => val.split(' '),\n  },\n];\n\nexport default {\n  name: 'build-android',\n  description: 'builds your app',\n  func: buildAndroid,\n  options: options,\n};\n"],"mappings":"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"}