{"version":3,"names":["buildIOS","_","ctx","args","project","ios","CLIError","xcodeProject","sourceDir","process","chdir","configuration","logger","warn","mode","projectInfo","getProjectInfo","checkIfConfigurationExists","inferredSchemeName","path","basename","name","extname","scheme","getConfigurationScheme","info","isWorkspace","chalk","bold","extendedArgs","packager","device","udid","simulator","buildProject","undefined","fallbackSimulators","selectedSimulator","getDestinationSimulator","error","devices","listIOSDevices","find","d","printFoundDevices","physicalDevices","filter","type","matchingDevice","deviceName","firstIOSDevice","deviceByName","formattedDeviceName","String","version","map","join","iosBuildOptions","description","default","env","RCT_METRO_PORT","parse","Number","getDefaultUserTerminal","func","examples","desc","cmd","options"],"sources":["../../../src/commands/buildIOS/index.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport path from 'path';\nimport chalk from 'chalk';\nimport {Config} from '@react-native-community/cli-types';\nimport {\n  logger,\n  CLIError,\n  getDefaultUserTerminal,\n} from '@react-native-community/cli-tools';\nimport {Device} from '../../types';\nimport {BuildFlags, buildProject} from './buildProject';\nimport {getDestinationSimulator} from '../../tools/getDestinationSimulator';\nimport {getProjectInfo} from '../../tools/getProjectInfo';\nimport {checkIfConfigurationExists} from '../../tools/checkIfConfigurationExists';\nimport {getConfigurationScheme} from '../../tools/getConfigurationScheme';\nimport listIOSDevices from '../../tools/listIOSDevices';\n\nexport interface FlagsT extends BuildFlags {\n  configuration?: string;\n  simulator?: string;\n  device?: string | true;\n  udid?: string;\n  scheme?: string;\n}\n\nfunction buildIOS(_: Array<string>, ctx: Config, args: FlagsT) {\n  if (!ctx.project.ios) {\n    throw new CLIError(\n      'iOS project folder not found. Are you sure this is a React Native project?',\n    );\n  }\n\n  const {xcodeProject, sourceDir} = ctx.project.ios;\n\n  if (!xcodeProject) {\n    throw new CLIError(\n      `Could not find Xcode project files in \"${sourceDir}\" folder`,\n    );\n  }\n\n  process.chdir(sourceDir);\n\n  if (args.configuration) {\n    logger.warn('--configuration has been deprecated. Use --mode instead.');\n    logger.warn(\n      'Parameters were automatically reassigned to --mode on this run.',\n    );\n    args.mode = args.configuration;\n  }\n\n  const projectInfo = getProjectInfo();\n  checkIfConfigurationExists(projectInfo, args.mode);\n\n  const inferredSchemeName = path.basename(\n    xcodeProject.name,\n    path.extname(xcodeProject.name),\n  );\n  const scheme = args.scheme || inferredSchemeName;\n\n  args.mode = getConfigurationScheme(\n    {scheme: args.scheme, mode: args.mode},\n    sourceDir,\n  );\n\n  logger.info(\n    `Found Xcode ${\n      xcodeProject.isWorkspace ? 'workspace' : 'project'\n    } \"${chalk.bold(xcodeProject.name)}\"`,\n  );\n\n  const extendedArgs = {\n    ...args,\n    packager: false,\n  };\n\n  // // No need to load all available devices\n  if (!args.device && !args.udid) {\n    if (!args.simulator) {\n      return buildProject(xcodeProject, undefined, scheme, extendedArgs);\n    }\n\n    /**\n     * If provided simulator does not exist, try simulators in following order\n     * - iPhone 14\n     * - iPhone 13\n     * - iPhone 12\n     * - iPhone 11\n     */\n    const fallbackSimulators = [\n      'iPhone 14',\n      'iPhone 13',\n      'iPhone 12',\n      'iPhone 11',\n    ];\n\n    const selectedSimulator = getDestinationSimulator(args, fallbackSimulators);\n\n    return buildProject(\n      xcodeProject,\n      selectedSimulator.udid,\n      scheme,\n      extendedArgs,\n    );\n  }\n\n  if (args.device && args.udid) {\n    return logger.error(\n      'The `device` and `udid` options are mutually exclusive.',\n    );\n  }\n\n  const devices = listIOSDevices();\n\n  if (args.udid) {\n    const device = devices.find((d) => d.udid === args.udid);\n    if (!device) {\n      return logger.error(\n        `Could not find a device with udid: \"${chalk.bold(\n          args.udid,\n        )}\". ${printFoundDevices(devices)}`,\n      );\n    }\n\n    return buildProject(xcodeProject, device.udid, scheme, extendedArgs);\n  } else {\n    const physicalDevices = devices.filter((d) => d.type !== 'simulator');\n    const device = matchingDevice(physicalDevices, args.device);\n    if (device) {\n      return buildProject(xcodeProject, device.udid, scheme, extendedArgs);\n    }\n  }\n}\n\nfunction matchingDevice(\n  devices: Array<Device>,\n  deviceName: string | true | undefined,\n) {\n  if (deviceName === true) {\n    const firstIOSDevice = devices.find((d) => d.type === 'device')!;\n    if (firstIOSDevice) {\n      logger.info(\n        `Using first available device named \"${chalk.bold(\n          firstIOSDevice.name,\n        )}\" due to lack of name supplied.`,\n      );\n      return firstIOSDevice;\n    } else {\n      logger.error('No iOS devices connected.');\n      return undefined;\n    }\n  }\n  const deviceByName = devices.find(\n    (device) =>\n      device.name === deviceName || formattedDeviceName(device) === deviceName,\n  );\n  if (!deviceByName) {\n    logger.error(\n      `Could not find a device named: \"${chalk.bold(\n        String(deviceName),\n      )}\". ${printFoundDevices(devices)}`,\n    );\n  }\n  return deviceByName;\n}\n\nfunction formattedDeviceName(simulator: Device) {\n  return simulator.version\n    ? `${simulator.name} (${simulator.version})`\n    : simulator.name;\n}\n\nfunction printFoundDevices(devices: Array<Device>) {\n  return [\n    'Available devices:',\n    ...devices.map((device) => `  - ${device.name} (${device.udid})`),\n  ].join('\\n');\n}\n\nexport const iosBuildOptions = [\n  {\n    name: '--simulator <string>',\n    description:\n      'Explicitly set simulator to use. Optionally include iOS version between ' +\n      'parenthesis at the end to match an exact version: \"iPhone 6 (10.0)\"',\n  },\n  {\n    name: '--mode <string>',\n    description: 'Explicitly set the scheme configuration to use',\n  },\n  {\n    name: '--configuration <string>',\n    description: '[Deprecated] Explicitly set the scheme configuration to use',\n  },\n  {\n    name: '--scheme <string>',\n    description: 'Explicitly set Xcode scheme to use',\n  },\n  {\n    name: '--device [string]',\n    description:\n      'Explicitly set device to use by name.  The value is not required if you have a single device connected.',\n  },\n  {\n    name: '--udid <string>',\n    description: 'Explicitly set device to use by udid',\n  },\n  {\n    name: '--verbose',\n    description: 'Do not use xcbeautify or xcpretty even if installed',\n  },\n  {\n    name: '--port <number>',\n    default: process.env.RCT_METRO_PORT || 8081,\n    parse: Number,\n  },\n  {\n    name: '--terminal <string>',\n    description:\n      'Launches the Metro Bundler in a new window using the specified terminal path.',\n    default: getDefaultUserTerminal(),\n  },\n  {\n    name: '--xcconfig [string]',\n    description: 'Explicitly set xcconfig to use',\n  },\n  {\n    name: '--buildFolder <string>',\n    description:\n      'Location for iOS build artifacts. Corresponds to Xcode\\'s \"-derivedDataPath\".',\n  },\n];\n\nexport default {\n  name: 'build-ios',\n  description: 'builds your app on iOS simulator',\n  func: buildIOS,\n  examples: [\n    {\n      desc: 'Build the app for the IOS simulator',\n      cmd: 'react-native build-ios',\n    },\n    {\n      desc: 'Build the app for all IOS devices',\n      cmd: 'react-native build-ios --mode \"Release\"',\n    },\n    {\n      desc: 'Build the app for a specific IOS device',\n      cmd: 'react-native build-ios --simulator \"IPhone 11\"',\n    },\n  ],\n  options: iosBuildOptions,\n};\n"],"mappings":"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"}