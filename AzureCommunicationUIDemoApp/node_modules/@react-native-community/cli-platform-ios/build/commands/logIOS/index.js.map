{"version":3,"names":["findAvailableDevice","devices","key","Object","keys","device","availability","state","logIOS","rawDevices","execFileSync","encoding","JSON","parse","logger","error","tailDeviceLogs","udid","logDir","path","join","os","homedir","log","spawnSync","stdio","name","description","func"],"sources":["../../../src/commands/logIOS/index.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {execFileSync, spawnSync} from 'child_process';\nimport os from 'os';\nimport path from 'path';\nimport {logger} from '@react-native-community/cli-tools';\nimport {Device} from '../../types';\n\nfunction findAvailableDevice(devices: {[index: string]: Array<Device>}) {\n  for (const key of Object.keys(devices)) {\n    for (const device of devices[key]) {\n      if (device.availability === '(available)' && device.state === 'Booted') {\n        return device;\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Starts iOS device syslog tail\n */\nasync function logIOS() {\n  const rawDevices = execFileSync(\n    'xcrun',\n    ['simctl', 'list', 'devices', '--json'],\n    {encoding: 'utf8'},\n  );\n\n  const {devices} = JSON.parse(rawDevices) as {\n    devices: {[index: string]: Array<Device>};\n  };\n\n  const device = findAvailableDevice(devices);\n  if (device === null) {\n    logger.error('No active iOS device found');\n    return;\n  }\n\n  tailDeviceLogs(device.udid);\n}\n\nfunction tailDeviceLogs(udid: string) {\n  const logDir = path.join(\n    os.homedir(),\n    'Library',\n    'Logs',\n    'CoreSimulator',\n    udid,\n    'asl',\n  );\n\n  const log = spawnSync('syslog', ['-w', '-F', 'std', '-d', logDir], {\n    stdio: 'inherit',\n  });\n\n  if (log.error !== null) {\n    throw log.error;\n  }\n}\n\nexport default {\n  name: 'log-ios',\n  description: 'starts iOS device syslog tail',\n  func: logIOS,\n};\n"],"mappings":";;;;;;AAQA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAyD;AAXzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA,SAASA,mBAAmB,CAACC,OAAyC,EAAE;EACtE,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,EAAE;IACtC,KAAK,MAAMI,MAAM,IAAIJ,OAAO,CAACC,GAAG,CAAC,EAAE;MACjC,IAAIG,MAAM,CAACC,YAAY,KAAK,aAAa,IAAID,MAAM,CAACE,KAAK,KAAK,QAAQ,EAAE;QACtE,OAAOF,MAAM;MACf;IACF;EACF;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA,eAAeG,MAAM,GAAG;EACtB,MAAMC,UAAU,GAAG,IAAAC,6BAAY,EAC7B,OAAO,EACP,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,EACvC;IAACC,QAAQ,EAAE;EAAM,CAAC,CACnB;EAED,MAAM;IAACV;EAAO,CAAC,GAAGW,IAAI,CAACC,KAAK,CAACJ,UAAU,CAEtC;EAED,MAAMJ,MAAM,GAAGL,mBAAmB,CAACC,OAAO,CAAC;EAC3C,IAAII,MAAM,KAAK,IAAI,EAAE;IACnBS,kBAAM,CAACC,KAAK,CAAC,4BAA4B,CAAC;IAC1C;EACF;EAEAC,cAAc,CAACX,MAAM,CAACY,IAAI,CAAC;AAC7B;AAEA,SAASD,cAAc,CAACC,IAAY,EAAE;EACpC,MAAMC,MAAM,GAAGC,eAAI,CAACC,IAAI,CACtBC,aAAE,CAACC,OAAO,EAAE,EACZ,SAAS,EACT,MAAM,EACN,eAAe,EACfL,IAAI,EACJ,KAAK,CACN;EAED,MAAMM,GAAG,GAAG,IAAAC,0BAAS,EAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAEN,MAAM,CAAC,EAAE;IACjEO,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,IAAIF,GAAG,CAACR,KAAK,KAAK,IAAI,EAAE;IACtB,MAAMQ,GAAG,CAACR,KAAK;EACjB;AACF;AAAC,eAEc;EACbW,IAAI,EAAE,SAAS;EACfC,WAAW,EAAE,+BAA+B;EAC5CC,IAAI,EAAEpB;AACR,CAAC;AAAA"}