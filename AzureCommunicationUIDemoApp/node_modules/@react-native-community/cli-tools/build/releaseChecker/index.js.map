{"version":3,"names":["releaseChecker","root","version","currentVersion","require","path","join","resolveNodeModuleDir","name","latestRelease","getLatestRelease","printNewRelease","e","logger","debug"],"sources":["../../src/releaseChecker/index.ts"],"sourcesContent":["import path from 'path';\nimport logger from '../logger';\n// @ts-ignore - JS file\nimport resolveNodeModuleDir from '../resolveNodeModuleDir';\nimport getLatestRelease from './getLatestRelease';\nimport printNewRelease from './printNewRelease';\n\nexport default async function releaseChecker(root: string) {\n  try {\n    const {version: currentVersion} = require(path.join(\n      resolveNodeModuleDir(root, 'react-native'),\n      'package.json',\n    ));\n    const {name} = require(path.join(root, 'package.json'));\n    const latestRelease = await getLatestRelease(name, currentVersion);\n\n    if (latestRelease) {\n      printNewRelease(name, latestRelease, currentVersion);\n    }\n  } catch (e) {\n    // We let the flow continue as this component is not vital for the rest of\n    // the CLI.\n    logger.debug(\n      'Cannot detect current version of React Native, ' +\n        'skipping check for a newer release',\n    );\n    logger.debug(e);\n  }\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;AAEA;AACA;AACA;AAAgD;AAHhD;;AAKe,eAAeA,cAAc,CAACC,IAAY,EAAE;EACzD,IAAI;IACF,MAAM;MAACC,OAAO,EAAEC;IAAc,CAAC,GAAGC,OAAO,CAACC,eAAI,CAACC,IAAI,CACjD,IAAAC,6BAAoB,EAACN,IAAI,EAAE,cAAc,CAAC,EAC1C,cAAc,CACf,CAAC;IACF,MAAM;MAACO;IAAI,CAAC,GAAGJ,OAAO,CAACC,eAAI,CAACC,IAAI,CAACL,IAAI,EAAE,cAAc,CAAC,CAAC;IACvD,MAAMQ,aAAa,GAAG,MAAM,IAAAC,yBAAgB,EAACF,IAAI,EAAEL,cAAc,CAAC;IAElE,IAAIM,aAAa,EAAE;MACjB,IAAAE,wBAAe,EAACH,IAAI,EAAEC,aAAa,EAAEN,cAAc,CAAC;IACtD;EACF,CAAC,CAAC,OAAOS,CAAC,EAAE;IACV;IACA;IACAC,eAAM,CAACC,KAAK,CACV,iDAAiD,GAC/C,oCAAoC,CACvC;IACDD,eAAM,CAACC,KAAK,CAACF,CAAC,CAAC;EACjB;AACF"}