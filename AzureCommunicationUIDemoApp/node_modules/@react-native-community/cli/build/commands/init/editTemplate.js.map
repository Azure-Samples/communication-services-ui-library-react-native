{"version":3,"names":["DEFAULT_TITLE_PLACEHOLDER","validatePackageName","packageName","packageNameParts","split","packageNameRegex","length","test","replaceNameInUTF8File","filePath","projectName","templateName","logger","debug","fileContent","fs","readFile","replacedFileContent","replace","RegExp","toLowerCase","writeFile","renameFile","oldName","newName","newFileName","path","join","dirname","basename","rename","shouldRenameFile","nameToReplace","includes","shouldIgnoreFile","match","isIosFile","UNDERSCORED_DOTFILES","processDotfiles","dotfile","find","e","undefined","getPackageNameDetails","cleanPackageName","packageNameArray","prefix","segments","startsWithCom","createAndroidPackagePaths","pathFolders","slice","segmentsList","initialDir","process","cwd","chdir","segment","mkdirSync","replacePlaceholderWithPackageName","placeholderName","placeholderTitle","walk","reverse","iosFile","stat","isDirectory","fileName","error","CLIError","changePlaceholderInTemplate","projectTitle"],"sources":["../../../src/commands/init/editTemplate.ts"],"sourcesContent":["import path from 'path';\nimport {CLIError, logger} from '@react-native-community/cli-tools';\nimport walk from '../../tools/walk';\n\n// We need `graceful-fs` behavior around async file renames on Win32.\n// `gracefulify` does not support patching `fs.promises`. Use `fs-extra`, which\n// exposes its own promise-based interface over `graceful-fs`.\nimport fs from 'fs-extra';\n\ninterface PlaceholderConfig {\n  projectName: string;\n  placeholderName: string;\n  placeholderTitle?: string;\n  projectTitle?: string;\n  packageName?: string;\n}\n\n/**\n  TODO: This is a default placeholder for title in react-native template.\n  We should get rid of this once custom templates adapt `placeholderTitle` in their configurations.\n*/\nconst DEFAULT_TITLE_PLACEHOLDER = 'Hello App Display Name';\n\nexport function validatePackageName(packageName: string) {\n  const packageNameParts = packageName.split('.');\n  const packageNameRegex = /^([a-zA-Z]([a-zA-Z0-9_])*\\.)+[a-zA-Z]([a-zA-Z0-9_])*$/u;\n\n  if (packageNameParts.length < 2) {\n    throw `The package name ${packageName} is invalid. It should contain at least two segments, e.g. com.app`;\n  }\n\n  if (!packageNameRegex.test(packageName)) {\n    throw `The ${packageName} package name is not valid. It can contain only alphanumeric characters and dots.`;\n  }\n}\n\nasync function replaceNameInUTF8File(\n  filePath: string,\n  projectName: string,\n  templateName: string,\n) {\n  logger.debug(`Replacing in ${filePath}`);\n  const fileContent = await fs.readFile(filePath, 'utf8');\n  const replacedFileContent = fileContent\n    .replace(new RegExp(templateName, 'g'), projectName)\n    .replace(\n      new RegExp(templateName.toLowerCase(), 'g'),\n      projectName.toLowerCase(),\n    );\n\n  if (fileContent !== replacedFileContent) {\n    await fs.writeFile(filePath, replacedFileContent, 'utf8');\n  }\n}\n\nasync function renameFile(filePath: string, oldName: string, newName: string) {\n  const newFileName = path.join(\n    path.dirname(filePath),\n    path.basename(filePath).replace(new RegExp(oldName, 'g'), newName),\n  );\n\n  logger.debug(`Renaming ${filePath} -> file:${newFileName}`);\n\n  await fs.rename(filePath, newFileName);\n}\n\nfunction shouldRenameFile(filePath: string, nameToReplace: string) {\n  return path.basename(filePath).includes(nameToReplace);\n}\n\nfunction shouldIgnoreFile(filePath: string) {\n  return filePath.match(/node_modules|yarn.lock|package-lock.json/g);\n}\n\nfunction isIosFile(filePath: string) {\n  return filePath.includes('ios');\n}\n\nconst UNDERSCORED_DOTFILES = [\n  'buckconfig',\n  'eslintrc.js',\n  'flowconfig',\n  'gitattributes',\n  'gitignore',\n  'prettierrc.js',\n  'watchmanconfig',\n  'editorconfig',\n  'bundle',\n  'ruby-version',\n  'node-version',\n  'xcode.env',\n];\n\nasync function processDotfiles(filePath: string) {\n  const dotfile = UNDERSCORED_DOTFILES.find((e) => filePath.includes(`_${e}`));\n\n  if (dotfile === undefined) {\n    return;\n  }\n\n  await renameFile(filePath, `_${dotfile}`, `.${dotfile}`);\n}\n\nfunction getPackageNameDetails(packageName: string) {\n  const cleanPackageName = packageName.replace(/[^\\p{L}\\p{N}.]+/gu, '');\n  const packageNameArray = cleanPackageName.split('.');\n  const [prefix, ...segments] = packageNameArray;\n  const startsWithCom = prefix === 'com';\n\n  return {\n    cleanPackageName,\n    packageNameArray,\n    prefix,\n    segments,\n    startsWithCom,\n  };\n}\n\nasync function createAndroidPackagePaths(\n  filePath: string,\n  packageName: string,\n) {\n  const {startsWithCom, segments, packageNameArray} = getPackageNameDetails(\n    packageName,\n  );\n  const pathFolders = filePath.split('/').slice(-2);\n  if (pathFolders[0] === 'java' && pathFolders[1] === 'com') {\n    const segmentsList = startsWithCom ? segments : packageNameArray;\n\n    if (segmentsList.length > 1) {\n      const initialDir = process.cwd();\n      process.chdir(filePath);\n\n      try {\n        await fs.rename(\n          `${filePath}/${segmentsList.join('.')}`,\n          `${filePath}/${segmentsList[segmentsList.length - 1]}`,\n        );\n\n        for (const segment of segmentsList) {\n          fs.mkdirSync(segment);\n          process.chdir(segment);\n        }\n\n        await fs.rename(\n          `${filePath}/${segmentsList[segmentsList.length - 1]}`,\n          process.cwd(),\n        );\n      } catch {\n        throw 'Failed to create correct paths for Android.';\n      }\n\n      process.chdir(initialDir);\n    }\n  }\n}\n\nexport async function replacePlaceholderWithPackageName({\n  projectName,\n  placeholderName,\n  placeholderTitle,\n  packageName,\n}: Omit<Required<PlaceholderConfig>, 'projectTitle'>) {\n  validatePackageName(packageName);\n\n  const {cleanPackageName, segments, startsWithCom} = getPackageNameDetails(\n    packageName,\n  );\n\n  for (const filePath of walk(process.cwd()).reverse()) {\n    if (shouldIgnoreFile(filePath)) {\n      continue;\n    }\n\n    const iosFile = isIosFile(filePath);\n\n    if (!(await fs.stat(filePath)).isDirectory()) {\n      let newName = startsWithCom\n        ? cleanPackageName\n        : `com.${cleanPackageName}`;\n\n      if (iosFile) {\n        newName = projectName;\n      }\n\n      //replace bundleID for iOS\n      await replaceNameInUTF8File(\n        filePath,\n        `PRODUCT_BUNDLE_IDENTIFIER = \"${\n          startsWithCom ? cleanPackageName : `com.${cleanPackageName}`\n        }\"`,\n        'PRODUCT_BUNDLE_IDENTIFIER = \"(.*)\"',\n      );\n\n      if (filePath.includes('app.json')) {\n        await replaceNameInUTF8File(filePath, projectName, placeholderName);\n      } else {\n        // replace main component name for Android package\n        await replaceNameInUTF8File(\n          filePath,\n          `return \"${projectName}\"`,\n          `return \"${placeholderName}\"`,\n        );\n        await replaceNameInUTF8File(\n          filePath,\n          `<string name=\"app_name\">${projectName}</string>`,\n          `<string name=\"app_name\">${placeholderTitle}</string>`,\n        );\n\n        await replaceNameInUTF8File(\n          filePath,\n          newName,\n          `com.${placeholderName}`,\n        );\n        await replaceNameInUTF8File(filePath, newName, placeholderName);\n        await replaceNameInUTF8File(filePath, newName, placeholderTitle);\n      }\n    }\n\n    let fileName = startsWithCom ? segments.join('.') : cleanPackageName;\n\n    if (shouldRenameFile(filePath, placeholderName)) {\n      if (iosFile) {\n        fileName = projectName;\n      }\n\n      await renameFile(filePath, placeholderName, fileName);\n    } else if (shouldRenameFile(filePath, placeholderName.toLowerCase())) {\n      await renameFile(\n        filePath,\n        placeholderName.toLowerCase(),\n        fileName.toLowerCase(),\n      );\n    }\n    try {\n      await createAndroidPackagePaths(filePath, packageName);\n    } catch (error) {\n      throw new CLIError('Failed to create correct paths for Android.');\n    }\n\n    await processDotfiles(filePath);\n  }\n}\n\nexport async function changePlaceholderInTemplate({\n  projectName,\n  placeholderName,\n  placeholderTitle = DEFAULT_TITLE_PLACEHOLDER,\n  projectTitle = projectName,\n  packageName,\n}: PlaceholderConfig) {\n  logger.debug(`Changing ${placeholderName} for ${projectName} in template`);\n\n  if (packageName) {\n    try {\n      await replacePlaceholderWithPackageName({\n        projectName,\n        placeholderName,\n        placeholderTitle,\n        packageName,\n      });\n    } catch (error) {\n      throw new CLIError(error);\n    }\n  } else {\n    for (const filePath of walk(process.cwd()).reverse()) {\n      if (shouldIgnoreFile(filePath)) {\n        continue;\n      }\n      if (!(await fs.stat(filePath)).isDirectory()) {\n        await replaceNameInUTF8File(filePath, projectName, placeholderName);\n        await replaceNameInUTF8File(filePath, projectTitle, placeholderTitle);\n      }\n      if (shouldRenameFile(filePath, placeholderName)) {\n        await renameFile(filePath, placeholderName, projectName);\n      } else if (shouldRenameFile(filePath, placeholderName.toLowerCase())) {\n        await renameFile(\n          filePath,\n          placeholderName.toLowerCase(),\n          projectName.toLowerCase(),\n        );\n      }\n\n      await processDotfiles(filePath);\n    }\n  }\n}\n"],"mappings":"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"}