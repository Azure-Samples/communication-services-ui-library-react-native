{"version":3,"names":["pkgJson","require","program","CommanderCommand","usage","version","option","handleError","err","logger","enable","opts","verbose","error","message","replace","stack","log","info","chalk","dim","reset","process","exit","printExamples","examples","output","length","formattedUsage","map","example","desc","cyan","cmd","join","concat","bold","isDetachedCommand","command","detached","attachCommand","rest","name","action","handleAction","args","passedOptions","argv","Array","from","slice","func","description","addHelpText","opt","options","parse","val","default","run","setupAndRun","e","includes","disable","setVerbose","platform","scriptName","absolutePath","path","__dirname","childProcess","execFileSync","stdio","warn","red","detachedCommands","config","loadConfig","projectCommands","commands","debug","CLIError","bin","resolve"],"sources":["../src/index.ts"],"sourcesContent":["import chalk from 'chalk';\nimport childProcess from 'child_process';\nimport {Command as CommanderCommand} from 'commander';\nimport path from 'path';\nimport {Command, Config} from '@react-native-community/cli-types';\nimport {logger, CLIError} from '@react-native-community/cli-tools';\nimport {detachedCommands, projectCommands} from './commands';\nimport loadConfig from '@react-native-community/cli-config';\nconst pkgJson = require('../package.json');\n\nconst program = new CommanderCommand()\n  .usage('[command] [options]')\n  .version(pkgJson.version, '-v', 'Output the current version')\n  .option('--verbose', 'Increase logging verbosity');\n\nconst handleError = (err: Error) => {\n  logger.enable();\n  if (program.opts().verbose) {\n    logger.error(err.message);\n  } else {\n    // Some error messages (esp. custom ones) might have `.` at the end already.\n    const message = err.message.replace(/\\.$/, '');\n    logger.error(`${message}.`);\n  }\n  if (err.stack) {\n    logger.log(err.stack);\n  }\n  if (!program.opts().verbose) {\n    logger.info(\n      chalk.dim(\n        `Run CLI with ${chalk.reset('--verbose')} ${chalk.dim(\n          'flag for more details.',\n        )}`,\n      ),\n    );\n  }\n  process.exit(1);\n};\n\nfunction printExamples(examples: Command['examples']) {\n  let output: string[] = [];\n\n  if (examples && examples.length > 0) {\n    const formattedUsage = examples\n      .map((example) => `  ${example.desc}: \\n  ${chalk.cyan(example.cmd)}`)\n      .join('\\n\\n');\n\n    output = output.concat([chalk.bold('\\nExample usage:'), formattedUsage]);\n  }\n\n  return output.join('\\n').concat('\\n');\n}\n\n/**\n * Custom type assertion needed for the `makeCommand` conditional\n * types to be properly resolved.\n */\nconst isDetachedCommand = (\n  command: Command<boolean>,\n): command is Command<true> => {\n  return command.detached === true;\n};\n\n/**\n * Attaches a new command onto global `commander` instance.\n *\n * Note that this function takes additional argument of `Config` type in case\n * passed `command` needs it for its execution.\n */\nfunction attachCommand<IsDetached extends boolean>(\n  command: Command<IsDetached>,\n  ...rest: IsDetached extends false ? [Config] : []\n): void {\n  const cmd = program\n    .command(command.name)\n    .action(async function handleAction(\n      this: CommanderCommand,\n      ...args: string[]\n    ) {\n      const passedOptions = this.opts();\n      const argv = Array.from(args).slice(0, -1);\n\n      try {\n        if (isDetachedCommand(command)) {\n          await command.func(argv, passedOptions);\n        } else {\n          await command.func(argv, rest[0] as Config, passedOptions);\n        }\n      } catch (error) {\n        handleError(error);\n      }\n    });\n\n  if (command.description) {\n    cmd.description(command.description);\n  }\n\n  cmd.addHelpText('after', printExamples(command.examples));\n\n  for (const opt of command.options || []) {\n    cmd.option(\n      opt.name,\n      opt.description ?? '',\n      opt.parse || ((val: any) => val),\n      typeof opt.default === 'function'\n        ? opt.default(rest[0] as Config)\n        : opt.default,\n    );\n  }\n}\n\nasync function run() {\n  try {\n    await setupAndRun();\n  } catch (e) {\n    handleError(e);\n  }\n}\n\nasync function setupAndRun() {\n  // Commander is not available yet\n\n  // when we run `config`, we don't want to output anything to the console. We\n  // expect it to return valid JSON\n  if (process.argv.includes('config')) {\n    logger.disable();\n  }\n\n  logger.setVerbose(process.argv.includes('--verbose'));\n\n  // We only have a setup script for UNIX envs currently\n  if (process.platform !== 'win32') {\n    const scriptName = 'setup_env.sh';\n    const absolutePath = path.join(__dirname, '..', scriptName);\n\n    try {\n      childProcess.execFileSync(absolutePath, {stdio: 'pipe'});\n    } catch (error) {\n      logger.warn(\n        `Failed to run environment setup script \"${scriptName}\"\\n\\n${chalk.red(\n          error,\n        )}`,\n      );\n      logger.info(\n        `React Native CLI will continue to run if your local environment matches what React Native expects. If it does fail, check out \"${absolutePath}\" and adjust your environment to match it.`,\n      );\n    }\n  }\n\n  for (const command of detachedCommands) {\n    attachCommand(command);\n  }\n\n  try {\n    const config = loadConfig();\n\n    logger.enable();\n\n    for (const command of [...projectCommands, ...config.commands]) {\n      attachCommand(command, config);\n    }\n  } catch (error) {\n    /**\n     * When there is no `package.json` found, the CLI will enter `detached` mode and a subset\n     * of commands will be available. That's why we don't throw on such kind of error.\n     */\n    if (error.message.includes(\"We couldn't find a package.json\")) {\n      logger.debug(error.message);\n      logger.debug(\n        'Failed to load configuration of your project. Only a subset of commands will be available.',\n      );\n    } else {\n      throw new CLIError(\n        'Failed to load configuration of your project.',\n        error,\n      );\n    }\n  }\n\n  program.parse(process.argv);\n}\n\nconst bin = require.resolve('./bin');\n\nexport {run, bin, loadConfig};\n"],"mappings":"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"}