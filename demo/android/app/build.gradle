apply plugin: "com.android.application"
apply plugin: "com.facebook.react"

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore.
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US.  Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

/**
 * Whether to enable the Hermes VM.
 *
 * This should be set on project.ext.react and mirrored here.  If it is not set
 * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode
 * and the benefits of using Hermes will therefore be sharply reduced.
 */
// def enableHermes = project.ext.react.get("enableHermes", false);

/**
 * Architectures to build native code for in debug.
 */
def nativeArchitectures = project.getProperties().get("reactNativeDebugArchitectures")

android {
    ndkVersion rootProject.ext.ndkVersion

    compileSdkVersion rootProject.ext.compileSdkVersion

    packagingOptions {
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }

    namespace "com.azurecommunicationuidemoapp"
    defaultConfig {
        applicationId "com.azurecommunicationuidemoapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    splits {
        abi {
            reset()
            enable false
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

}

repositories {
    mavenCentral()
    // maven {
    //     // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
    //     url("$rootDir/../node_modules/react-native/android")
    // }
    // maven {
    //     // Android JSC is installed from npm
    //     url("$rootDir/../node_modules/jsc-android/dist")
    // }
    maven { url "https://pkgs.dev.azure.com/MicrosoftDeviceSDK/DuoSDK-Public/_packaging/Duo-SDK-Feed/maven/v1" }
    google()
    maven { url 'https://www.jitpack.io' }
}


dependencies {
    implementation 'com.azure.android:azure-communication-ui-calling:1.6.0'
    implementation("com.facebook.react:react-android")
    if (hermesEnabled.toBoolean()) {
        implementation 'com.facebook.react:hermes-android'
    } else {
        implementation jscFlavor
    }    
    // implementation "com.microsoft.fluentui:fluentui_others:0.0.21"
    // implementation "com.microsoft.fluentui:fluentui_drawer:0.0.21"
    // implementation "com.microsoft.fluentui:fluentui_persona:0.0.21"
    // implementation "com.microsoft.fluentui:fluentui_transients:0.0.21"

    // implementation ("androidx.appcompat:appcompat:1.4.2") {
    //     version {
    //         strictly '1.4.2'
    //     }
    // }

    // implementation 'com.azure.android:azure-communication-calling:2.5.0'

    // implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.10'
    // implementation 'androidx.core:core-ktx:1.7.0'
    // implementation 'androidx.appcompat:appcompat:1.4.1'
    // implementation 'androidx.fragment:fragment-ktx:1.4.1'
    // implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    // implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'

    // implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"


    // debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}") {
    //     exclude group:'com.facebook.fbjni'
    // }

    // debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
    //     exclude group:'com.facebook.flipper'
    //     exclude group:'com.squareup.okhttp3', module:'okhttp'
    // }

    // debugImplementation("com.facebook.flipper:flipper-fresco-plugin:0.182.0") {
    //     exclude group:'com.facebook.flipper'
    // }


}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)